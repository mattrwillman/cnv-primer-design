# To do:
# BLAST isPcr products to check for probe?
# Organize output
# Run with BUSCO CNVs

TAG_SETS = config['TAGS']
ASSEMBLIES = config['ASSEMBLIES']
CHRS = config['CHRS']

rule all:
    input:
        expand("results/isPcrMerged/{tag}_{assembly}.fa", tag = TAG_SETS, assembly = ASSEMBLIES)

rule primer3:
    input:
        "resources/{tag}_primer3_tags.txt"
    output:
        "results/{tag}_primer3_out.txt"
    log:
        "logs/{tag}_primer3.log"
    shell:
        "primer3_core --output={output} --error={log} {input}"

rule primer3_to_ispcr:
    input:
        "results/{tag}_primer3_out.txt"
    output:
        "results/{tag}_ispcr_input.txt"
    log:
        "logs/{tag}_primer3_to_fasta.log"
    shell:
        "python workflow/scripts/primer3_to_ispcr.py {input} {output} &> {log}"

rule subset_chrs:
    input:
        "resources/{assembly}.fasta"
    output:
        "results/chrs/{assembly}.{chr}.fasta"
    log:
        "logs/subset_chr/{assembly}.{chr}.log"
    shell:
        "seqkit grep -rp '{wildcards.chr}' {input} > {output} 2> {log}"

rule ispcr_by_chr:
    input:
        database = "results/chrs/{assembly}.{chr}.fasta", 
        query = "results/{tag}_ispcr_input.txt"
    output:
        "results/isPcrByChr/{tag}.{assembly}.{chr}.fa"
    log:
        "logs/isPcrByChr/{tag}_{assembly}.{chr}.log"
    shell:
        "workflow/scripts/isPcr {input.database} {input.query} {output} 2> {log}"

rule concat_ispcr:
    input:
        expand("results/isPcrByChr/{{tag}}.{{assembly}}.{chr}.fa", chr = CHRS)
    output:
        "results/isPcrMerged/{tag}_{assembly}.fa"
    log:
        "logs/isPcrMerge/{tag}_{assembly}.log"
    shell:
        "cat {input} > {output} 2> {log}"
