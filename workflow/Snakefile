ASSEMBLIES = config['ASSEMBLIES']
CHRS = config['CHRS']

rule all:
    input:
        expand("results/isPcrMerged/Rht8_{assembly}.fa", assembly = ASSEMBLIES)

rule primer3:
    input:
        "resources/Rht8_primer3_tags.txt"
    output:
        "results/Rht8_primer3_out.txt"
    log:
        "logs/Rht8_primer3.log"
    shell:
        "primer3_core --output={output} --error={log} {input}"

rule primer3_to_ispcr:
    input:
        "results/Rht8_primer3_out.txt"
    output:
        "results/Rht8_ispcr_input.txt"
    log:
        "logs/Rht8_primer3_to_fasta.log"
    shell:
        "python workflow/scripts/primer3_to_ispcr.py {input} {output} &> {log}"

rule subset_chrs:
    input:
        "resources/{assembly}.fasta"
    output:
        "results/chrs/{assembly}.{chr}.fasta"
    shell:
        "seqkit grep -rp '{wildcards.chr}' {input} > {output}"

#rule make_assembly_2bit:
#    input:
#        "resources/{assembly}.fasta"
#    output:
#        "results/{assembly}.2bit"
#    log:
#        "logs/{assembly}_2bit.log"
#   shell:
#        "faToTwoBit {input} {output} -long 2> {log}"

rule ispcr_by_chr:
    input:
        database = "results/chrs/{assembly}.{chr}.fasta", 
        query = "results/Rht8_ispcr_input.txt"
    output:
        "results/isPcrByChr/Rht8.{assembly}.{chr}.fa"
    log:
        "logs/isPcrByChr/Rht8_{assembly}.{chr}.log"
    shell:
        "workflow/scripts/isPcr {input.database} {input.query} {output} 2> {log}"

rule concat_ispcr:
    input:
        expand("results/isPcrByChr/Rht8.{{assembly}}.{chr}.fa", chr = CHRS)
    output:
        "results/isPcrMerged/Rht8_{assembly}.fa"
    log:
        "logs/isPcrMerge/Rht8_{assembly}.log"
    shell:
        "cat {input} > {output} 2> {log}"
